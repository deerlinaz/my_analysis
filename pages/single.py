import streamlit as st
import pandas as pd
import numpy as np
import requests
import plotly.express as px
import datetime
import time

# from streamlit_lottie import st_lottie
# import json

# # –ó–∞–≥—Ä—É–∂–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
# lottie_url = "https://assets7.lottiefiles.com/packages/lf20_touohxv0.json"

# st_lottie(lottie_url, speed=1, width=300, height=300, key="cool_animation")



import streamlit as st

st.title("üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞")
st.write("–ó–¥–µ—Å—å –±—É–¥—É—Ç –≥—Ä–∞—Ñ–∏–∫–∏ –∏ –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º—É –ï–ù–° –¢–†–£ –∫–æ–¥—É")


with st.spinner("üîÑ –ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö, –∂–¥—ë–º..."):
    time.sleep(3)

st.success("‚úÖ –ì–æ—Ç–æ–≤–æ!")

URL = "https://ows.goszakup.gov.kz/v3/graphql"
TOKEN = "8f82885b218e9d5f53004891e3ade12d" 

st.write("1. –í—ã–±–µ—Ä–∏—Ç–µ –ï–ù–° –¢–†–£ –∫–æ–¥")
# enstru_code = st.selectbox(
#     '–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–¥ –ï–ù–° –¢–†–£',
#     ( "702213.000.000001", "702212.000.000001", "722012.000.000001", "749020.000.000057",
#     "702211.000.000002", "702212.000.000000", "711124.000.000002", "692023.000.000000",
#     "711231.900.000000", "620220.000.000000", "702216.900.000001", "749019.000.000011",
#     "711142.000.000000", "702211.000.000003", "749020.000.000007", "702211.000.000004",
#     "749019.000.000016", "711211.000.000000", "749019.000.000004", "702217.000.000000",
#     "692010.000.000000", "741019.000.000000", "702211.000.000007", "702212.000.000003",
#     "749019.000.000010", "692031.000.000000", "749019.000.000005", "749013.000.000000",
#     "749019.000.000009", "702212.000.000004", "749019.000.000007", "749019.000.000008",
#     "702211.000.000008", "702211.000.000005", "702215.000.000000", "702211.000.000001",
#     "702214.000.000000", "702213.000.000000", "702216.900.000000", "749015.000.000000",
#     "749019.000.000003", "781011.000.000001", "749019.000.000006", "702211.000.000006",
#     "702211.000.000000", "711211.000.000001", "702212.000.000002", "702213.000.000001",
#     "702212.000.000001", "691012.000.000005", "691012.000.000006", "691012.000.000007",
#     "691012.000.000003", "691014.000.000003", "691012.000.000004", "691014.000.000000",
#     "691011.000.000000", "691014.000.000002", "691014.000.000001", "691012.000.000001",
#     "691013.000.000000", "691012.000.000000"))

# st.write('–í—ã –≤—ã–±—Ä–∞–ª–∏:', enstru_code)
# # "691012.000.000002"
# enstru_code = st.text_input("–ù–∞–ø–∏—à–∏—Ç–µ –∑–¥–µ—Å—å –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

# st.write('–í—ã –≤—ã–±—Ä–∞–ª–∏:', enstru_code)
# –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
enstru_code = [ "–î—Ä—É–≥–æ–µ", "702213.000.000001", "702212.000.000001", "722012.000.000001", "749020.000.000057",
    "702211.000.000002", "702212.000.000000", "711124.000.000002", "692023.000.000000",
    "711231.900.000000", "620220.000.000000", "702216.900.000001", "749019.000.000011",
    "711142.000.000000", "702211.000.000003", "749020.000.000007", "702211.000.000004",
    "749019.000.000016", "711211.000.000000", "749019.000.000004", "702217.000.000000",
    "692010.000.000000", "741019.000.000000", "702211.000.000007", "702212.000.000003",
    "749019.000.000010", "692031.000.000000", "749019.000.000005", "749013.000.000000",
    "749019.000.000009", "702212.000.000004", "749019.000.000007", "749019.000.000008",
    "702211.000.000008", "702211.000.000005", "702215.000.000000", "702211.000.000001",
    "702214.000.000000", "702213.000.000000", "702216.900.000000", "749015.000.000000",
    "749019.000.000003", "781011.000.000001", "749019.000.000006", "702211.000.000006",
    "702211.000.000000", "711211.000.000001", "702212.000.000002", "702213.000.000001",
    "702212.000.000001", "691012.000.000005", "691012.000.000006", "691012.000.000007",
    "691012.000.000003", "691014.000.000003", "691012.000.000004", "691014.000.000000",
    "691011.000.000000", "691014.000.000002", "691014.000.000001", "691012.000.000001",
    "691013.000.000000", "691012.000.000000"]

# Dropdown –¥–ª—è –≤—ã–±–æ—Ä–∞
selected = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∑–Ω–∞—á–µ–Ω–∏–µ", enstru_code)

# –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–æ "–î—Ä—É–≥–æ–µ", –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ
if selected == "–î—Ä—É–≥–æ–µ":
    manual_input = st.text_input("–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∑–Ω–∞—á–µ–Ω–∏–µ")
    final_value = manual_input if manual_input else selected
else:
    final_value = selected

enstru_code = final_value
st.write("–í—ã –≤—ã–±—Ä–∞–ª–∏:", enstru_code)

with st.spinner("üîÑ –ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö, –∂–¥—ë–º..."):
    time.sleep(3)

st.success("‚úÖ –ì–æ—Ç–æ–≤–æ!")

#------------------------------------------------------------------------------------------
st.write("2. –í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–Ω–∞—á–∞–ª—å–Ω—É—é –¥–∞—Ç—É")
from_date = str(st.date_input("–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–Ω–∞—á–∞–ª—å–Ω—É—é –¥–∞—Ç—É ", datetime.date.today()))
st.write("–í—ã –≤—ã–±—Ä–∞–ª–∏:", from_date)

with st.spinner("üîÑ –ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö, –∂–¥—ë–º..."):
    time.sleep(3)

st.success("‚úÖ –ì–æ—Ç–æ–≤–æ!")

#-----------------------------------------------------------------------------
# date_range = st.date_input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞—Ç", 
#                            [datetime.date.today() - datetime.timedelta(days=7), datetime.date.today()])
# st.write("–í—ã –≤—ã–±—Ä–∞–ª–∏:", date_range)

st.title("üìå –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Ä–∞–∑–¥–µ–ª–∞–º")

# üîó –°–æ–∑–¥–∞–µ–º —Å—Å—ã–ª–∫–∏
st.markdown("[‚û° –ü–µ—Ä–µ–π—Ç–∏ –∫ –†–∞–∑–¥–µ–ª—É 1: –û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ](#section1)", unsafe_allow_html=True)
st.markdown("[‚û° –ü–µ—Ä–µ–π—Ç–∏ –∫ –†–∞–∑–¥–µ–ª—É 2: –¢–æ–ø –∑–∞–∫–∞–∑—á–∏–∫–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–∫—É–ø–æ–∫](#section2)", unsafe_allow_html=True)
st.markdown("[‚û° –ü–µ—Ä–µ–π—Ç–∏ –∫ –†–∞–∑–¥–µ–ª—É 3: –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—É–º–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤](#section3)", unsafe_allow_html=True)
st.markdown("[‚û° –ü–µ—Ä–µ–π—Ç–∏ –∫ –†–∞–∑–¥–µ–ª—É 4: –¢–æ–ø –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –ø–æ –æ–±—â–µ–π —Å—É–º–º–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤](#section4)", unsafe_allow_html=True)
st.markdown("[‚û° –ü–µ—Ä–µ–π—Ç–∏ –∫ –†–∞–∑–¥–µ–ª—É 5: –¢–æ–ø –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π —Ç–µ–Ω–¥–µ—Ä–æ–≤](#section5)", unsafe_allow_html=True)
st.markdown("[‚û° –ü–µ—Ä–µ–π—Ç–∏ –∫ –†–∞–∑–¥–µ–ª—É 6: –î–∏–Ω–∞–º–∏–∫–∞ –∑–∞–∫—É–ø–æ–∫ –ø–æ –≥–æ–¥–∞–º](#section6)", unsafe_allow_html=True)
st.markdown("[‚û° –ü–µ—Ä–µ–π—Ç–∏ –∫ –†–∞–∑–¥–µ–ª—É 7: –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∑–∞–∫—É–ø–∫–∏](#section7)", unsafe_allow_html=True)
st.markdown("[‚û° –ü–µ—Ä–µ–π—Ç–∏ –∫ –†–∞–∑–¥–µ–ª—É 8: –¢–æ–ø 10 –∑–∞–∫—É–ø–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤](#section8)", unsafe_allow_html=True)
st.markdown("[‚û° –ü–µ—Ä–µ–π—Ç–∏ –∫ –†–∞–∑–¥–µ–ª—É 9: –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—É–º–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –ø–æ –º–µ—Ç–æ–¥–∞–º –∑–∞–∫—É–ø–∫–∏](#section9)", unsafe_allow_html=True)
st.markdown("[‚û° –ü–µ—Ä–µ–π—Ç–∏ –∫ –†–∞–∑–¥–µ–ª—É 10: –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–∫—É–ø–æ–∫ –ø–æ –º–µ—Å—è—Ü–∞–º](#section10)", unsafe_allow_html=True)

#----------------------------------------------------------------------------

QUERY = """
query getPlans($enstru: String!, $timestamp: [String], $limit: Int, $after: Int) {
  Plans(filter: { refEnstruCode: $enstru, timestamp: $timestamp }, limit: $limit, after: $after) {

    # –£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä
    id
    # –ò–¥ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–≥–æ –ø—É–Ω–∫—Ç–∞ –ø–ª–∞–Ω–∞
    rootrecordId
    # –ò–î –ó–∞–∫–∞–∑—á–∏–∫–∞
    sysSubjectsId
    # –ò–î –û—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞
    sysOrganizatorId
    # –ë–ò–ù/–ò–ò–ù –∑–∞–∫–∞–∑—á–∏–∫–∞
    subjectBiin
    # –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑—á–∏–∫–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
    subjectNameRu
    # –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –∑–∞–∫–∞–∑—á–∏–∫–∞ –Ω–∞ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–º —è–∑—ã–∫–µ
    subjectNameKz
    # –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
    nameRu
    # –ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –Ω–∞ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–º —è–∑—ã–∫–µ
    nameKz
    # –ö–æ–¥ —Å–ø–æ—Å–æ–±–∞ –∑–∞–∫—É–ø–∫–∏ (–ø–ª–∞–Ω–æ–≤—ã–π)
    refTradeMethodsId
    # –ö–æ–¥ –µ–¥–∏–Ω–∏—Ü—ã –∏–∑–º–µ—Ä–µ–Ω–∏—è
    refUnitsCode
    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ / –æ–±—ä–µ–º
    count
    # –¶–µ–Ω–∞ –∑–∞ –µ–¥–∏–Ω–∏—Ü—É
    price
    # –û–±—â–∞—è —Å—É–º–º–∞, —É—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–∞—è –¥–ª—è –∑–∞–∫—É–ø–∫–∏
    amount
    # –ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π —Å—Ä–æ–∫ –∑–∞–∫—É–ø–∫–∏
    refMonthsId
    # –°—Ç–∞—Ç—É—Å –ø—É–Ω–∫—Ç–∞ –ø–ª–∞–Ω–∞
    refPlnPointStatusId
    # –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –≥–æ–¥ –≤ –ø—É–Ω–∫—Ç–µ –ø–ª–∞–Ω–∞
    plnPointYear
    # –ö–æ–¥ –≤–∏–¥–∞ –ø—Ä–µ–¥–º–µ—Ç–∞ –∑–∞–∫—É–ø–∫–∏
    refSubjectTypeId
    # –ö–æ–¥ –ö–¢–†–£
    refEnstruCode
    # –ö–æ–¥ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ —Ñ–∏–Ω–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–∏—è
    refFinsourceId
    # –ö–æ–¥ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –±—é–¥–∂–µ—Ç–Ω–æ–π –ø—Ä–æ–≥—Ä–∞–º–º—ã
    refAbpCode
    # –ü—Ä–∏–∑–Ω–∞–∫ —Å—É–±—ä–µ–∫—Ç/–Ω–µ —Å—É–±—ä–µ–∫—Ç –ì–ó (–∫–≤–∞–∑–∏—Å–µ–∫—Ç–æ—Ä) 0 - —Å—É–±—ä–µ–∫—Ç –ì–ó, 1 - –Ω–µ —Å—É–±—ä–µ–∫—Ç –ì–ó
    isQvazi
    # –î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏
    dateCreate
    # –î–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏
    timestamp
    # –ö–æ–¥ —Ç–∏–ø–∞ –ø—É–Ω–∫—Ç–∞ –ø–ª–∞–Ω–∞
    refPointTypeId
    # –ö—Ä–∞—Ç–∫–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
    descRu
    # –ö—Ä–∞—Ç–∫–∞—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –Ω–∞ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–º —è–∑—ã–∫–µ
    descKz
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–º —è–∑—ã–∫–µ
    extraDescKz
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ
    extraDescRu
    # –ü–ª–∞–Ω–∏—Ä—É–µ–º–∞—è —Å—É–º–º–∞ –Ω–∞ 1 –≥–æ–¥
    sum1
    # –ü–ª–∞–Ω–∏—Ä—É–µ–º–∞—è —Å—É–º–º–∞ –Ω–∞ 2 –≥–æ–¥
    sum2
    # –ü–ª–∞–Ω–∏—Ä—É–µ–º–∞—è —Å—É–º–º–∞ –Ω–∞ 3 –≥–æ–¥
    sum3
    # –°—Ä–æ–∫ –ø–æ—Å—Ç–∞–≤–∫–∏
    supplyDateRu
    # –†–∞–∑–º–µ—Ä –∞–≤–∞–Ω—Å–æ–≤–æ–≥–æ –ø–ª–∞—Ç–µ–∂–∞ %
    prepayment
    # –û–±–æ—Å–Ω–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–ø–æ—Å–æ–±–∞ –∑–∞–∫—É–ø–∫–∏
    refJustificationId
    # –í–∏–¥ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è
    refAmendmentAgreemTypeId
    # –ò–î –æ—Å–Ω–æ–≤–∞–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ —Å–æ–≥–ª–∞—à–µ–Ω–∏—è
    refAmendmAgreemJustifId
    # –ù–æ–º–µ—Ä –ø—É–Ω–∫—Ç–∞ –ø–ª–∞–Ω–∞ –≤ –¥–æ–≥–æ–≤–æ—Ä–µ
    contractPrevPointId
    # –ü—Ä–∏–∑–Ω–∞–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –∑–∞–∫—É–ø–∫–∏
    disablePersonId
    # –ò–î —Ñ–∏–ª–∏–∞–ª–∞ (–∫–æ–º—É –ø–µ—Ä–µ–¥–∞–Ω–æ)
    transferSysSubjectsId
    # –¢–∏–ø –ø–µ—Ä–µ–¥–∞—á–∏ –ø–ª–∞–Ω–∞
    transferType
    # –ö–æ–¥ –≤–∏–¥–∞ –±—é–¥–∂–µ—Ç–∞
    refBudgetTypeId
    # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∞
    createdinActId
    # –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
    isActive
    # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –∞–∫—Ç–∞
    activeActId
    # –û–±—ä–µ–∫—Ç —É–¥–∞–ª–µ–Ω
    isDeleted
    # –ò–î —Å–∏—Å—Ç–µ–º—ã
    systemId
    # –î–∞—Ç–∞ –∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏
    indexDate
  }
}
"""
HEADERS = {
    "Content-Type": "application/json",
    "Authorization": f"Bearer {TOKEN}"
}
# from_date = "2020-01-01"
# enstru_code = '620220.000.000000'

def fetch_plans(enstru_code, from_date, limit=200):
    after = 0
    all_results = []
    while True:
        variables = {"enstru": enstru_code, "timestamp": [from_date], "limit": limit, "after": after}
        response = requests.post(URL, json={"query": QUERY, "variables": variables}, headers=HEADERS)
        data = response.json()

        plans = data.get("data", {}).get("Plans", [])
        if not plans:
            break

        all_results.extend(plans)
        after = plans[-1]["id"]
    return all_results

df = pd.DataFrame(fetch_plans(enstru_code, from_date, limit=100))



# data = pd.read_csv("/Users/alina/Downloads/tenders.csv")
# st.title("")
st.markdown("<a name='section1'></a>", unsafe_allow_html=True)
st.subheader("–û–±—â–∏–µ –¥–∞–Ω–Ω—ã–µ")
st.write(df)
with st.spinner("üîÑ –ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö, –∂–¥—ë–º..."):
    time.sleep(3)

st.success("‚úÖ –ì–æ—Ç–æ–≤–æ!")

# st.write(df.head())
#---------------------------------------------------------------------------------------
# –ê–Ω–∞–ª–∏–∑ –∑–∞–∫–∞–∑—á–∏–∫–æ–≤
st.markdown("<a name='section2'></a>", unsafe_allow_html=True)
st.subheader("–¢–æ–ø –∑–∞–∫–∞–∑—á–∏–∫–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –ø–æ–∫—É–ø–æ–∫")
st.write("–≠—Ç–æ—Ç –≥—Ä–∞—Ñ–∏–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç 10 –∑–∞–∫–∞–∑—á–∏–∫–æ–≤, —Å–æ–≤–µ—Ä—à–∏–≤—à–∏—Ö –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—É–ø–æ–∫.")
buyers_count = df['subjectNameRu'].value_counts().sort_values(ascending=False).head(10)
st.bar_chart(buyers_count)

with st.spinner("üîÑ –ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö, –∂–¥—ë–º..."):
    time.sleep(3)

st.success("‚úÖ –ì–æ—Ç–æ–≤–æ!")

#---------------------------------------------------------------------------------------
# –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑
st.markdown("<a name='section3'></a>", unsafe_allow_html=True)
st.subheader("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—É–º–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤")
st.write("–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã —Å—É–º–º—ã –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –≤ –≤—ã–±–æ—Ä–∫–µ.")
fig = px.histogram(df, x='amount', nbins=50, title="–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—É–º–º")
st.plotly_chart(fig)

with st.spinner("üîÑ –ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö, –∂–¥—ë–º..."):
    time.sleep(3)

st.success("‚úÖ –ì–æ—Ç–æ–≤–æ!")
#----------------------------------------------------------------------------------------
# # –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –ª–∏–¥–µ—Ä—ã —Ä—ã–Ω–∫–∞
# st.markdown("<a name='section4'></a>", unsafe_allow_html=True)
# st.subheader("–¢–æ–ø –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –ø–æ –æ–±—â–µ–π —Å—É–º–º–µ –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤")
# st.write("–ó–¥–µ—Å—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã 3 –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏, –∑–∞–∫–ª—é—á–∏–≤—à–∏—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –Ω–∞ –Ω–∞–∏–±–æ–ª—å—à—É—é —Å—É–º–º—É.")
# top_organizations = df.groupby('sysOrganizatorId')['amount'].sum().nlargest(10)

# # –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π –≤–º–µ—Å—Ç–æ ID
# top_organizations_named = (
#     df[['sysOrganizatorId', 'subjectNameRu']]
#     .drop_duplicates('sysOrganizatorId')
#     .set_index('sysOrganizatorId')
#     .loc[top_organizations.index]
# )

# # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Å—É–º–º—ã –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
# top_organizations_named['amount'] = top_organizations

# # –°—Ç—Ä–æ–∏–º –¥–∏–∞–≥—Ä–∞–º–º—É
# st.bar_chart(top_organizations_named.set_index('subjectNameRu')['amount'])

# with st.spinner("üîÑ –ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö, –∂–¥—ë–º..."):
#     time.sleep(3)

# st.success("‚úÖ –ì–æ—Ç–æ–≤–æ!")

#---------------------------------------------------------------------------------------
# –ü–æ–±–µ–¥–∏—Ç–µ–ª–∏ —Ç–µ–Ω–¥–µ—Ä–æ–≤
st.markdown("<a name='section5'></a>", unsafe_allow_html=True)
st.subheader("–¢–æ–ø –∑–∞–∫–∞–∑—á–∏–∫–æ–≤")
st.write("–≠—Ç–æ—Ç –≥—Ä–∞—Ñ–∏–∫ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç 10 –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π, –∑–∞–∫–ª—é—á–∏–≤—à–∏—Ö –∫–æ–Ω—Ç—Ä–∞–∫—Ç—ã –Ω–∞ –Ω–∞–∏–±–æ–ª—å—à—É—é —Å—É–º–º—É")

winners = df['sysSubjectsId'].value_counts().sort_values().head(10)

# –§–∏–ª—å—Ç—Ä—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π DataFrame, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π –∏–∑ —Ç–æ–ø-10
winners_2 = (
    df[df['sysSubjectsId'].isin(winners.index)]
    .groupby('subjectNameRu')['amount']
    .sum()
    .sort_values(ascending=False)
    .head(10)
)

# –°—Ç—Ä–æ–∏–º –¥–∏–∞–≥—Ä–∞–º–º—É
st.bar_chart(winners_2)

with st.spinner("üîÑ –ò–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö, –∂–¥—ë–º..."):
    time.sleep(3)

st.success("‚úÖ –ì–æ—Ç–æ–≤–æ!")

# st.write("Hello!")
#--------------------------------------------------------------------
st.markdown("<a name='section6'></a>", unsafe_allow_html=True)
st.subheader("–î–∏–Ω–∞–º–∏–∫–∞ –∑–∞–∫—É–ø–æ–∫ –ø–æ –≥–æ–¥–∞–º")
st.write("–õ–∏–Ω–µ–π–Ω—ã–π –≥—Ä–∞—Ñ–∏–∫ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ –∏–∑–º–µ–Ω—è–ª–∞—Å—å —Å—É–º–º–∞ –∑–∞–∫—É–ø–æ–∫ –ø–æ –≥–æ–¥–∞–º.")
yearly_trends = df.groupby("plnPointYear")["amount"].sum()

fig = px.line(yearly_trends, x=yearly_trends.index, y=yearly_trends.values,
              markers=True)

st.plotly_chart(fig)

#----------------------------------------------------------------------------
st.markdown("<a name='section7'></a>", unsafe_allow_html=True)
st.subheader("–ü–æ–ø—É–ª—è—Ä–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –∑–∞–∫—É–ø–∫–∏")
st.write("–ö—Ä—É–≥–æ–≤–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç 5 —Å–∞–º—ã—Ö —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–¥–æ–≤ –∑–∞–∫—É–ø–∫–∏.")
top_methods = df["refTradeMethodsId"].value_counts().nlargest(5)

fig = px.pie(top_methods, values=top_methods.values, names=top_methods.index)
st.plotly_chart(fig)

#----------------------------------------------------------------------------
# st.markdown("<a name='section8'></a>", unsafe_allow_html=True)
# st.subheader("–¢–æ–ø 10 –∑–∞–∫—É–ø–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤")
# st.write("–≠—Ç–æ—Ç –≥—Ä–∞—Ñ–∏–∫ –¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç 10 —Å–∞–º—ã—Ö –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∑–∞–∫—É–ø–æ–∫.")

# top_categories = df["refEnstruCode"].value_counts().nlargest(10).reset_index()
# top_categories.columns = ["–ö–æ–¥ –ö–¢–†–£", "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—É–ø–æ–∫"]

# fig = px.bar(top_categories, x="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫—É–ø–æ–∫", y="–ö–æ–¥ –ö–¢–†–£", orientation="h")
# st.plotly_chart(fig)
#----------------------------------------------------------------------------
st.markdown("<a name='section9'></a>", unsafe_allow_html=True)
st.subheader("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å—É–º–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –ø–æ –º–µ—Ç–æ–¥–∞–º –∑–∞–∫—É–ø–∫–∏")
st.write("–Ø—â–∏–∫ —Å —É—Å–∞–º–∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç —É–≤–∏–¥–µ—Ç—å –º–µ–¥–∏–∞–Ω—É, —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∏ –≤—ã–±—Ä–æ—Å—ã —Å—É–º–º –∫–æ–Ω—Ç—Ä–∞–∫—Ç–æ–≤ –ø–æ —Ä–∞–∑–Ω—ã–º –º–µ—Ç–æ–¥–∞–º –∑–∞–∫—É–ø–∫–∏.")
fig = px.box(df, x="refTradeMethodsId", y="amount", points="all")

st.plotly_chart(fig)

#----------------------------------------------------------------------------
st.markdown("<a name='section10'></a>", unsafe_allow_html=True)
st.subheader("–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–∫—É–ø–æ–∫ –ø–æ –º–µ—Å—è—Ü–∞–º")
st.write("–ì–∏—Å—Ç–æ–≥—Ä–∞–º–º–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, –∫–∞–∫ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –∑–∞–∫—É–ø–∫–∏ –ø–æ –º–µ—Å—è—Ü–∞–º –≤ —Ç–µ—á–µ–Ω–∏–µ –≥–æ–¥–∞.")
fig = px.histogram(df, x="refMonthsId", nbins=12)
st.plotly_chart(fig)